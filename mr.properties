num_of_inputfiles=1

#入力ファイルのサイズ(MB): long
# size of one Input File_Minimum (in MB)
size_of_inputfile_min=512

# size of one Input File_Max (in MB)
size_of_inputfile_max=512

# inputsplitのサイズ(MB)
# size of InputSplit (in MB).
# If "is_size_dynamic" is set as "0", this value is used as
# a predefined size.
size_of_inputsplit=64

# InputSplit内のレコードサイズ(MB)
#小数点値もOK
# Record size of each InputSplit(MB).
# type: double, i.e., floating point OK.
size_of_inputrecord=2

# OutRecord/InputRecordのサイズ比ρ
# たとえばInputReordサイズをAとすると，
# OutputRecordサイズはρAであり，
# キーたちの重みを考慮すると
# 各キーのサイズはρA x w(k_i)/w(k_1)+w(k_2)..+w(k_n)
# Size Ratio of OutRecord Size / Input Record Size.
# The size of a output data in terms of Key_i in a output record is
# ρA x w(k_i)/{w(k_1)+w(k_2)..+w(k_n)}
# Also ρA is the same as the spill buffer record
# the number of spill buffer records per one spill file is
# (spill file size / ρA)
split_out_in_rate=1.0

# ShuffleFIleSplitをReduce出力したサイズ/SFSファイルサイズの比率．
# Output Size / Input Size at a Reducer.
reduce_out_in_rate=1.0

# ファイルホストの処理速度
# Proc. Speed in HDFS.
# "1000" means 1.0 GHz.
dfhost_mips=3000

# ファイルホストの帯域幅(MB)
# comm. bandwidth of HDFS.
dfhost_bw=125

# 0: マルチキャストでMapper 1: 逐次的にデータ転送する．
#入力データを転送する．
# HDFS -> 複数Mapperへの転送，Mapper->複数Reducerへのshuffle転送で使われる．
# 0: multicast transfer mode (HDFS->mappers@initial deployment of map tasks,  and mappers -> reducers@shuffle phase)
# 1: sequential data transfer mode.
dfs_transfer_mode=1

# 0: すべて固定値（size_of_inputsplit値が使われる）
# 1: 動的に決まる（各Mapperごとにsize_of_inputsplitサイズを決める）
# 0: every input split size is the same.
# 1: each input split size is adjusted according to the target mapper's attributes(not implemented).
is_size_dynamic=0

# 1つのInputSplit生成の仕事量(平均値）@DFS
# Workload per one InputSplit generation @ HDFS.
is_gen_workload_ave=10

# 1つの入力ファイル内のキーの種類数
# Number of key kinds
in_record_num_of_kinds_keys_min=30
in_record_num_of_kinds_keys_max=30
dist_in_record_num_of_kinds_keys=1
dist_in_record_num_of_kinds_mu=0.5

# 出力キー数 / 入力キー数
# number of output keys / number of input keys ratio.
key_rate=1.0

# workload for sorting one key in the collect phase.
workload_partitioning_per_key=5

# 1つの入力ファイル内の1キーの重み分布（例：キーの数（「アメリカ」の数のこと）
# この値に応じて，シャッフル時のキー単位のデータサイズが違ってくる．
# 出力ファイルサイズも違う．
# 実際には，キーの出現回数を指定してください．
# data size weight for each key.
# the larger, the larget its data size become in a input /output record.
key_weight_min=3
key_weight_max=10
dist_key_weight=1
dist_key_weight_mu=0.5

# 1つのinputrecord生成時，1MBあたり処理するのにかかる仕事量（固定）
# double型
# workload for generating one input record per 1 MB.
# double type (floating point OK).
in_record_workload_perMB=1.0

# ファイル書き出し時，1MBあたりの処理の仕事量
# Spillファイル生成，MergedFile生成(書き出し）時に使われる．
# double型
# workload for serializing 1 MB. (double type)
out_record_workload_perMB=3.0

# spillファイルの読み込み時に，1MBあたりの読み込み仕事量
# workload for reading spill file per 1MB.
spill_read_workload_perMB=5.0

# mergeファイル生成時，spillファイルどうしを結合するのにかかる
# 仕事量(1回のspillファイル同士のmerge）
merge_workload_permerge=5

# vCPU全体におけるmapper数の割合
num_mapper_rate=0.7

# Mapper数に対するReducer数の割合
# 全体数 * num_mapper_rate * num_reducer_rate_to_mapperが
# 実際のReducer数．
num_reducer_rate_to_mapper=0.5

# スレッド処理を何倍速で行うかの値．
# 値xは，x倍速ということ．
# Nx speed.  is the value N is specified,
# the actual simulation time is (time/N)
# (However, displayed exec. time is "time").
time_speed_rate=100

# Schedulingアルゴリズムの総数
# Number of scheduling algorithms.
mr_algorithm_scheduling_num=1

# Schedulingアルゴリズムで，使うもの
# 0: Base 1:??? 2:???
mr_algorithm_scheduling_using=0

# Provisioningアルゴリズムの総数
# Number of Provisioning algorithms.
mr_algorithm_provisioning_num=4

# Provisioningアルゴリズムで，使うもの
# 0: Base 1:Convex 2:BaseGW 3: ConvexGW
# the used provisioning algorithm
mr_algorithm_provisioning_using=3

# Mapperの数．この数ずつ並列に処理される．
# 使われていない．
#mapper_num=30

# Reducerの数
# 使われていない．
#reducer_num=3

############## Cloud環境の設定 #####################
# コアの利用率上限を考慮するかどうか
# 0: 考慮しない 1: 考慮する
cloud_constrained_mode=0

# コアの使用率の上限値
core_max_usage=100

datacenter_num=1
#BW at a DC (MBps)
datacenter_externalbw_min=125
datacenter_externalbw_max=125
host_num_foreachdc_min=100
host_num_foreachdc_max=100

# 1ホスト内のVM数
vm_num_foreachdc_min=1
vm_num_foreachdc_max=1

#0: uniform distribution 1: normal distribution
dist_host_cpu_num=1
dist_host_cpu_num_mu=0.5
host_cpu_num_min=1
host_cpu_num_max=1
host_core_num_foreachcpu_min=1
host_core_num_foreachcpu_max=1
# If "2", the core supports Hyperthreading
host_thread_num_foreeachcore=1

# Memory (MB)
vm_mem_min=1024
vm_mem_max=8192

# MIPS(1秒あたりの命令数（百万）
# MPIS = clock frequency/CPI / 10^6
#0: uniform distribution 1: normal distribution
dist_host_mips=1
dist_host_mips_mu=0.5
host_mips_min=2000
host_mips_max=3000

# Coreのレート＝CPU速度に対する割合
core_mips_rate_min=1.0
core_mips_rate_max=1.0



#BW (MB)
#0: uniform distribution 1: normal distribution
dist_host_bw=1
dist_host_bw_mu=0.5
host_bw_min=125
host_bw_max=125
#CPI(Cycle per Instruction)
vm_cpi=1
# Num of vCPUs for each VM.
dist_vm_vcpu_num=1
dist_vm_vcpu_num_mu=0.5
vm_vcpu_num_min=2
vm_vcpu_num_max=4


######↓は無関係だが，記載が必要###########

# VNFをvCPUへ割り当てたときの利用率上昇値（%)
vnf_usage_min=20
vnf_usage_max=80
# 0: uniform distribution, 1: normal distribution
dist_vnf_usage=1
dist_vnf_usage_mu=0.5

vnf_type_max=10



#Instructions / 10^7
# 3.0GHzで1秒 = 300
vnf_weight_min=500
vnf_weight_max=1000
# 0: uniforma distribution 1: normal distribution
dist_vnf_weight=1
dist_vnf_weight_mu=0.5

# MB
# 100Mbps (125MB/s)で1秒 = 125
vnf_datasize_min=10
vnf_datasize_max=100
# uniform distribution 1: normal distirbution
dist_vnf_datasize=1
dist_vnf_datasize_mu=0.5

# MB
# オフロードするモジュール自体のサイズ
offload_program_datasize=2

# 0: single SFC mode, 1: multiple SFC mode
sfc_multimode=0

# Number of VNFs in a SFC.
sfc_vnf_num=200
# degree is supposed to be set as normal distribution with mu=0.5
sfc_vnf_outdegree_min=1
sfc_vnf_outdegree_max=5

sfc_vnf_startnumrate=0.05
sfc_vnf_deapthalpha=1

# case of multiple SFCs.
multiple_sfc_num=10
multiple_sfc_vnf_num_min=30
multiple_sfc_vnf_num_max=70
dist_multiple_sfc_vnf_num=1
dist_multiple_sfc_vnf_num_mu=0.5


# FOR VNFScheduling Algorithm
# 0:average 1: max 2: min
calcmode_level=0


# For Fair VNF Scheduling Algorithm
nfv_fairness_weight_overlap=0.4

# For VNF-COUHF Algorithm
# 0: one vCPU 1: vCPUs in the Host, 2: all vCPU 3: Custom
cmwsl_sched_area=3


# Num. of mobile devices.
mobile_device_num=10
mobile_device_core_num_min=2
mobile_device_core_num_max=4
# Instructions per second / 10^7
mobile_device_cpu_mips_min=10
mobile_device_cpu_mips_max=25
# mbps
mobile_device_bw_min=50
mobile_device_bw_max=100

mobile_device_power_min=0.7
mobile_device_power_max=0.9
dist_mobile_device_power=1
dist_mobile_device_power_mu=0.5

mobile_device_gain_min=0.7
mobile_device_gain_max=0.9
dist_mobile_device_gain=1
dist_mobile_device_gain_mu=0.5

mobile_device_back_noise=10
# Number of channels.
mec_channel_num=14

mobile_device_tau_min=0.7
mobile_device_tau_max=0.9
dist_mobile_device_tau=1
dist_mobile_device_tau_mu=0.5
